#!/usr/bin/env node
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_yargs=_interopRequireDefault(require("yargs")),_yargs2=require("yargs/yargs"),_get=require("./get"),_bsocial=require("./bsocial"),_watch=require("./watch"),_config=require("./config"),options=(0,_yargs.default)((0,_yargs2.hideBin)(process.argv)).usage("Usage: -a <action>").option("a",{alias:"action",describe:"Action (run (default), watch, get)",type:"string"}).option("t",{alias:"txId",describe:"Tx Id to get from bitbus - use together with -g option",type:"string"}).option("q",{alias:"query",describe:"JSON stringified query to get from bitbus - use together with -g option",type:"string"}).option("p",{alias:"parser",describe:"type of parser (bob or txo)",type:"string"}).argv;(0,_asyncToGenerator2.default)(function*(){if("get"===options.action){var a={q:{find:{"out.s2":_config.B_BITCOM_ADDRESS,"out.s6":_config.MAP_BITCOM_ADDRESS},sort:{"blk.i":1},project:{blk:1,"tx.h":1,out:1,in:1},limit:10}};options.txId?a.q.find={"tx.h":options.txId}:options.query?a.q.find=JSON.parse(options.query):(console.error("Must pass either -t <txID> or -q <query> when using -a get"),process.exit(-1)),console.log(a);var b=options.parser||"bob";console.log(JSON.stringify(yield(0,_get.getBitbusBlockEvents)(a,b))),process.exit()}else"watch"===options.action?(console.log("Running continuous watch"),yield(0,_watch.watchBSocialTransactions)()):(console.log("Running once"),yield(0,_bsocial.indexBSocialTransactions)(),console.log("Done"),process.exit())})().catch(a=>{console.error(a)});